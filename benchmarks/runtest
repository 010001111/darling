#!/bin/bash

BUILDSERVER="osx"
CPPFLAGS=""
DYLD="dyld"

set -e

failure() {
	tput setaf 1
	tput bold
	echo "Benchmark failure - the last command failed to execute"
	tput sgr0
}

runtest() {
	trap failure ERR

	source="$1"
	extension="${source##*.}"
	source_fn=$(echo "$source" | sed 's/\//_/g')

	cflags="$(grep '// CFLAGS' "$source" || true)"
	cflags="-O3 $CPPFLAGS -w $(echo "$cflags" | cut -b 12-)"

	case "$extension" in
		"cpp")
			darwin_tool="g++"
			native_tool="clang++"
			;;
		"c")
			darwin_tool="gcc"
			native_tool="clang"
			;;
		"m")
			darwin_tool="gcc"
			native_tool="clang"
			cflags_native="-l:libobjc.so.4 -lgnustep-base"
			cflags_darwin="-lobjc"
			;;
		*)
			echo "Unsupported file type: $extension"
			exit 1
	esac

	tput bold
	echo "====="
	echo "Running benchmark '$source'"
	echo "====="
	tput sgr0

	cflags="$(grep '// CFLAGS' "$source" || true)"
	cflags="$CPPFLAGS -w $(echo "$cflags" | cut -b 12-)"

	echo "Copying the source code to Darwin..."
	scp "$source" "$BUILDSERVER:/tmp/$$.$source_fn" >/dev/null
	echo "Building the source code for Darwin..."
	ssh "$BUILDSERVER" "$darwin_tool $cflags $cflags_darwin '/tmp/$$.$source_fn' -o '/tmp/$$.$source_fn.bin'"
	echo "Copying the binary over..."
	scp "$BUILDSERVER:/tmp/$$.$source_fn.bin" "/tmp" >/dev/null
	ssh "$BUILDSERVER" "rm -f /tmp/$$.$source_fn*"

	echo "Running Darwin binary..."
	tput bold
	time $DYLD "/tmp/$$.$source_fn.bin"
	tput sgr0
	rm -f "/tmp/$$.$source_fn.bin"

	echo "Compiling native..."
	$native_tool $cflags $cflags_native "$source" -o "/tmp/$$.$source_fn.bin"
	echo "Running native binary..."
	tput bold
	time "/tmp/$$.$source_fn.bin"
	tput sgr0

	rm -f "/tmp/$$.$source_fn.bin"
}

if [[ "$0" == *runtest32 ]]; then
	CPPFLAGS="-m32"
	DYLD="dyld32"
	echo "32-bit mode"
fi
if [[ "$0" == *runtest64 ]]; then
	DYLD="dyld64"
	echo "64-bit mode"
fi

for test in "$@"; do
	runtest "$test"
done

